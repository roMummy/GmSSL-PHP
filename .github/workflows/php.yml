name: PHP Composer

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  windows:
        runs-on: windows-latest
        name: "Windows: Build and test"
        defaults:
            run:
                shell: powershell
        strategy:
            fail-fast: false
            matrix:
                php: ["8.1"]
                arch: [x64]
                ts: [nts]
                experimental: [false]
        steps:
                - name: Checkout Xdebug
                  uses: actions/checkout@v4
                - name: Setup PHP
                  id: setup-php
                  uses: php/setup-php-sdk@v0.10
                  with:
                      version: ${{matrix.php}}
                      arch: ${{matrix.arch}}
                      ts: ${{matrix.ts}}
                      cache: true

                - name: Download GMSSL source
                  run: |
                    Invoke-WebRequest -Uri https://github.com/guanzhi/GmSSL/archive/refs/tags/v3.1.1.zip -OutFile gmssl-v3.1.1.zip
                    Expand-Archive -Path gmssl-v3.1.1.zip -DestinationPath gmssl
                 # Set up CMake and configure the build (use Visual Studio for MSVC)
                - name: Configure build for x86
                  uses: ilammy/msvc-dev-cmd@v1
                  with:
                    arch: amd64_x86
                - name: Configure CMake
                  run: |
                    # Make sure you point to the correct source directory where CMakeLists.txt is located
                    cmake -B ${{ github.workspace }}\build -S ${{ github.workspace }}\gmssl\GmSSL-3.1.1 -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DWIN32=ON -DOPENSSL_ROOT_DIR="C:/Program Files/OpenSSL"
                
                  # Build GMSSL
                - name: Build GMSSL
                  working-directory: ${{ github.workspace }}\build
                  run: nmake 
                  
                - name: ls
                  run:  Get-ChildItem -Path ${{ github.workspace }} -Recurse -Filter "*gmssl.exe*"
          
          
                - name: Add custom path to PATH
                  run: |
                    echo "Adding custom path to PATH..."
                    $newPath = "${{ github.workspace }}\build\bin"
                    $env:PATH = "$newPath;$env:PATH"
                    echo "PATH updated: $env:PATH"
                    echo "PATH=$env:PATH" >> $env:GITHUB_ENV  # 将更新后的 PATH 环境变量保存到 GITHUB_ENV 中，供后续步骤使用
          
                - name: Verify PATH is updated
                  run: |
                    echo "Verifying PATH"
                    echo $env:PATH
          
                - name: Log GMSSL
                  working-directory: ${{ github.workspace }}\build
                  run: |
                    gmssl version
                    phpize

                - name: aaa
                  working-directory: ${{ github.workspace }}
                  run: |
                    mkdir aaa
                    cd aaa
                    
                - name: cmake
                  working-directory: ${{ github.workspace }}\aaa
                  run: cmake .. -G "NMake Makefiles" -DWIN32=ON
                  
                - name: nmake
                  run: nmake
                   
                - name: Enable Developer Command Prompt
                  uses: ilammy/msvc-dev-cmd@v1
                  with:
                      arch: ${{matrix.arch}}
                      toolset: ${{steps.setup-php.outputs.toolset}}
                - name: Generate Build Files
                  run: phpize
                - name: Configure Build
                  run: configure --with-xdebug --with-xdebug-compression --enable-debug-pack --with-prefix=${{steps.setup-php.outputs.prefix}}
                - name: Build
                  run: nmake
                - name: Define Xdebug Module Env
                  shell: powershell
                  run: |
                    chcp 65001

                    $dir = (Get-Location).Path + '\'
                    if ('x64' -eq '${{matrix.arch}}') { $dir = $dir + 'x64\' }
                    $dir = $dir + 'Release'
                    if ('ts' -eq '${{matrix.ts}}') { $dir = $dir + '_TS' }
                    $xdebug_dll_opt = 'TEST_PHP_ARGS=-n -d zend_extension=' + $dir + '\php_xdebug.dll'
                    echo $xdebug_dll_opt >> $env:GITHUB_ENV

                    $artifact_name = 'php_xdebug-${{env.XDEBUG_VERSION}}-${{matrix.php}}'

                    if ('8.0' -eq '${{matrix.php}}') { $artifact_name = $artifact_name + '-vs16' }
                    if ('8.1' -eq '${{matrix.php}}') { $artifact_name = $artifact_name + '-vs16' }
                    if ('8.2' -eq '${{matrix.php}}') { $artifact_name = $artifact_name + '-vs16' }
                    if ('8.3' -eq '${{matrix.php}}') { $artifact_name = $artifact_name + '-vs16' }

                    if ('nts' -eq '${{matrix.ts}}') { $artifact_name = $artifact_name + '-nts' }
                    if ('x64' -eq '${{matrix.arch}}') { $artifact_name = $artifact_name + '-x86_64' }

                    $xdebug_artifact_name = "ARTIFACT_NAME=" + $artifact_name
                    echo $xdebug_artifact_name >> $env:GITHUB_ENV

                    $from = $dir + '\php_xdebug.dll'
                    $to = $dir + '\' + $artifact_name + ".dll"
                    Copy-Item $from -Destination $to
                    $xdebug_artifact = "ARTIFACT=" + $to
                    echo $xdebug_artifact >> $env:GITHUB_ENV

                - name: Define Other Environment
                  shell: powershell
                  run: |
                    chcp 65001
                    echo "REPORT_EXIT_STATUS=1" >> $env:GITHUB_ENV
                    echo "TEST_PHP_EXECUTABLE=${{steps.setup-php.outputs.prefix}}\php.exe" >> $env:GITHUB_ENV
                    echo "TEMP=$((Get-Item -LiteralPath $Env:TEMP).FullName)" >> $env:GITHUB_ENV
                    echo "TMP=$((Get-Item -LiteralPath $Env:TMP).FullName)" >> $env:GITHUB_ENV
                    echo "XDEBUG_MODE=" >> $env:GITHUB_ENV
                - name: Run Tests
                  continue-on-error: ${{ matrix.experimental }}
                  run: |
                    echo "Artifact: ${{ env.ARTIFACT }}"
                    echo "TEST_PHP_ARGS: ${{ env.TEST_PHP_ARGS }}"
                    echo "Found PHP in: ${{ env.TEST_PHP_EXECUTABLE }}"
                    php run-xdebug-tests.php -j8 -q --offline --show-diff --show-slow 1000 --set-timeout 120 -g FAIL,XFAIL,BORK,WARN,LEAK,SKIP --temp-source c:\tests_tmp --temp-target c:\tests_tmp
                - name: Upload artifacts
                  uses: actions/upload-artifact@v3
                  with:
                      name: ${{env.ARTIFACT_NAME}}
                      path: ${{env.ARTIFACT}}
                - name: Publish Binaries to Release
                  if: ${{ startsWith(github.ref, 'refs/tags') }}
                  uses: svenstaro/upload-release-action@v2
                  with:
                      asset_name: ${{env.ARTIFACT_NAME}}.dll
                      file: ${{env.ARTIFACT}}
